const level2 = {
    // NOTE: Using placeholder collision data from level1.js
    collisionData: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 295, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 295, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 295, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 295, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 0, 0, 295, 295, 295, 0, 0, 295, 295, 295, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 295, 295, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 295, 295, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 0, 295, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 0, 0, 295, 0, 0, 295, 295, 295, 0, 0, 295, 0, 295, 0, 295, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 295, 295, 295, 0, 0, 295, 0, 0, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 295, 0, 295, 295, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 0, 295, 0, 295, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 295, 295, 295, 0, 0, 0, 295, 295, 0, 0, 0, 0, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 0, 0, 295, 295, 0, 0, 0, 295, 295, 295, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 0, 0, 0, 295, 295, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 295, 295, 295, 0, 0, 0, 0, 0, 295, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 295, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 295, 295, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 295, 295, 295, 295, 295, 295, 0, 0, 295, 295, 295, 0, 0, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 295, 0, 0, 295, 295, 295, 0, 0, 0, 295, 295, 295, 295, 295, 295, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    init: (spawnPosition) => {
        parsedCollisions = parse2D(level2.collisionData, 32)
        collisionBlocks = createObjectsFrom2D(parsedCollisions)
        player.collisionBlocks = collisionBlocks

        if (spawnPosition) {
            player.position.x = spawnPosition.x
            player.position.y = spawnPosition.y
        }

        background = new Sprite({
            position: {
                x: 0,
                y: 0,
            },
            imageSrc: './img/map11.png',
            frameRate: 1
        })

        doors = [
            new Sprite({
                position: {x: 833, y: 456},
                imageSrc: './img/Doors/Opening.png',
                frameRate: 5,
                frameBuffer: 4,
                loop: false,
                autoPlay: false,
                doorType: 'next',
                spawnPosition: { x: 100, y: 100 }
            }),
            new Sprite({
                position: {x: 96, y: 169},
                imageSrc: './img/Doors/Opening.png',
                frameRate: 5,
                frameBuffer: 4,
                loop: false,
                autoPlay: false,
                doorType: 'hub',
                spawnPosition: { x: 200, y: 100 }
            })
        ]

        doorClosing = new Sprite({
            position: {
                x: 833,
                y: 456,
            },
            imageSrc: './img/Doors/Closing.png',
            frameRate: 5,
            frameBuffer: 4,
            loop: false,
            autoPlay: false,
        })
    }
}